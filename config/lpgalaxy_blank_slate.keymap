/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define MACRO_PLACEHOLDER 0

#define BASE_EN 0
#define BASE_RU 1
#define FNL_EN 2
#define FNL_RU 3
#define FNR_EN 4
#define FNR_RU 5
#define L4D2 6
#define RORR 7

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
         zmk,matrix_transform = &ortho_transform;
    };

    behaviors {
        lp0: left_paired_0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp LT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rp0: right_paired_0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp GT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lp1: left_paired_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rp1: right_paired_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lp2: left_paired_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rp2: right_paired_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lp3: left_paired_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp CAPS>, <&kp SPACE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rp3: right_paired_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp STAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        qt: quotes {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        grtld: grave_n_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_en_layer {
            label = "Base EN";
            bindings = <
 &kp Q      &kp W       &kp E      &kp R       &kp T        &lp0  &rp0   &kp Y          &kp U       &kp I      &kp O         &kp P
 &kp A      &kp S       &kp D      &kp F       &kp G        &lp1  &rp1   &kp H          &kp J       &kp K      &kp L         &kp DQT
 &kp Z      &kp X       &kp C      &kp V       &kp B        &lp2  &rp2   &kp N          &kp M       &kp grtld  &kp UP        &kp ESC
 &kp LCTRL  &kp LSHIFT  &kp LALT   &kp ENTER   &mo FNL_EN   &lp3  &rp3   &mo FNR_EN     &kp BSPC    &kp LEFT   &kp DOWN      &kp RIGHT
            >;
        };

        base_ru_layer {
            label = "Base RU";
            bindings = <
 &kp Q      &kp W               &kp E      &kp R       &kp T          &kp LPAR       &kp RPAR         &kp Y          &kp U       &kp I      &kp O         &kp P
 &kp A      &kp S               &kp D      &kp F       &kp G          &kp LBRC       &kp RBRC         &kp H          &kp J       &kp K      &kp L         &kp DQT
 &kp Z      &kp X               &kp C      &kp V       &kp B          &kp COLON      &kp SEMI         &kp N          &kp M       &kp GRAVE  &kp UP        &kp ESC
 &kp LCTRL  &lt SHIFT_EN LSHIFT &kp LALT   &kp ENTER   &mo FNL_RU     &kp CAPS       &kp SPACE        &mo FNR_RU     &kp BSPC    &kp LEFT   &kp DOWN      &kp RIGHT
            >;
        };

        left_function_en_layer {
            label = "Left Function [EN]";
            bindings = <
&none      &none      &kp HASH     &kp DOLLAR   &kp F1     &kp F2     &kp F3     &kp F4     &kp N1     &kp N2     &kp N3     &kp N4
&none      &none      &kp CARET    &kp PERCENT  &kp F5     &kp F6     &kp F7     &kp F8     &kp N5     &kp N6     &kp N7     &kp N8
&to RORR   &none      &kp C_VOL_DN &kp C_VOL_UP &kp F9     &kp F10    &kp F11    &kp F12    &kp N9     &kp N0     &kp HOME   &kp PG_UP
&to L4D2   &kp LSHFT  &none        &kp C_MUTE   &none      &kp LGUI   &none      &none      &kp MINUS  &kp PLUS   &kp END    &kp PG_DN
            >;
        };

        left_function_ru_layer {
            label = "Left Function [RU]";
            bindings = <
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
            >;
        };

        right_function_en_layer {
            label = "Right Function [EN]";
            bindings = <
&none      &none      &none      &none      &kp F1     &kp F2     &kp F3     &kp F4     &kp AT     &none        &none     &bootloader
&none      &none      &none      &none      &kp F5     &kp F6     &kp F7     &kp F8     &kp UNDER  &kp PIPE     &none     &none
&none      &none      &none      &none      &kp F9     &kp F10    &kp F11    &kp F12    &kp COMMA  &kp DOT      &kp QMARK &none
&none      &none      &none      &none      &none      &none      &none      &none      &kp DEL    &kp EQUAL    &kp EXCL  &none
            >;
        };

        right_function_ru_layer {
            label = "Right Function [RU]";
            bindings = <
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
&none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none      &none
            >;
        };

        game_left4dead2_layer {
            label = "Game: left4dead2";
            bindings = <
&kp N1     &kp N2     &kp N3     &kp N4     &kp N5     &none      &none      &none      &none      &none      &to BASE_EN &none
&kp Q      &kp W      &kp E      &kp R      &none      &none      &none      &none      &none      &none      &none       &none
&kp A      &kp S      &kp D      &kp F      &none      &none      &none      &kp F12    &none      &none      &none       &none
&kp LCTRL  &kp LSHIFT &kp SPACE  &kp SPACE  &none      &none      &none      &none      &none      &none      &none       &none
            >;
        };

        game_risk_or_rain_returns_layer {
            label = "Game: Risk of Rain: Returns";
            bindings = <
&kp Q      &kp W      &kp E      &kp R      &none      &none      &none      &none      &none      &none      &to BASE_EN &none
&kp A      &kp S      &kp D      &kp F      &none      &none      &none      &none      &none      &none      &none       &none
&kp Z      &kp X      &kp C      &kp V      &none      &none      &none      &none      &none      &kp J      &kp UP      &kp K
&none      &none      &kp SPACE  &kp SPACE  &none      &none      &none      &none      &kp ESC    &kp LEFT   &kp DOWN    &kp RIGHT
            >;
        };
    };
};

